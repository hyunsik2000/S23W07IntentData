// Generated by view binder compiler. Do not edit!
package kr.ac.kumoh.ce.s20190400.mystudy.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import kr.ac.kumoh.ce.s20190400.mystudy.R;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnGenerate;

  @NonNull
  public final TextView num1;

  @NonNull
  public final TextView num2;

  @NonNull
  public final TextView num3;

  @NonNull
  public final TextView num4;

  @NonNull
  public final TextView num5;

  @NonNull
  public final TextView num6;

  @NonNull
  public final TextView txtMessage;

  private ActivityMainBinding(@NonNull ConstraintLayout rootView, @NonNull Button btnGenerate,
      @NonNull TextView num1, @NonNull TextView num2, @NonNull TextView num3,
      @NonNull TextView num4, @NonNull TextView num5, @NonNull TextView num6,
      @NonNull TextView txtMessage) {
    this.rootView = rootView;
    this.btnGenerate = btnGenerate;
    this.num1 = num1;
    this.num2 = num2;
    this.num3 = num3;
    this.num4 = num4;
    this.num5 = num5;
    this.num6 = num6;
    this.txtMessage = txtMessage;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnGenerate;
      Button btnGenerate = ViewBindings.findChildViewById(rootView, id);
      if (btnGenerate == null) {
        break missingId;
      }

      id = R.id.num1;
      TextView num1 = ViewBindings.findChildViewById(rootView, id);
      if (num1 == null) {
        break missingId;
      }

      id = R.id.num2;
      TextView num2 = ViewBindings.findChildViewById(rootView, id);
      if (num2 == null) {
        break missingId;
      }

      id = R.id.num3;
      TextView num3 = ViewBindings.findChildViewById(rootView, id);
      if (num3 == null) {
        break missingId;
      }

      id = R.id.num4;
      TextView num4 = ViewBindings.findChildViewById(rootView, id);
      if (num4 == null) {
        break missingId;
      }

      id = R.id.num5;
      TextView num5 = ViewBindings.findChildViewById(rootView, id);
      if (num5 == null) {
        break missingId;
      }

      id = R.id.num6;
      TextView num6 = ViewBindings.findChildViewById(rootView, id);
      if (num6 == null) {
        break missingId;
      }

      id = R.id.txtMessage;
      TextView txtMessage = ViewBindings.findChildViewById(rootView, id);
      if (txtMessage == null) {
        break missingId;
      }

      return new ActivityMainBinding((ConstraintLayout) rootView, btnGenerate, num1, num2, num3,
          num4, num5, num6, txtMessage);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
